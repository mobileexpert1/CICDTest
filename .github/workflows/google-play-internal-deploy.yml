name: Build and Deploy

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout the code from the repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Set up JDK 11 for building the project
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: 11
          distribution: 'temurin'

      # Set up JDK 17 for Gradle (if required for newer versions)
      - name: Set up JDK 17 for Gradle
        uses: actions/setup-java@v2
        with:
          java-version: 17
          distribution: 'temurin'

      # Cache Gradle dependencies to speed up subsequent builds
      - name: Cache Gradle dependencies
        uses: actions/cache@v4
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # Set execute permissions for gradlew script
      - name: Set execute permissions for gradlew
        run: chmod +x ./gradlew

      # Decrypt Google Play JSON Key from GitHub Secrets
      - name: Decrypt Google Play JSON Key
        run: echo "${{ secrets.GOOGLE_PLAY_JSON_KEY }}" > /tmp/google-play-key.json

      # Build the project and generate Android App Bundle (AAB)
      - name: Build the AAB (Release)
        run: ./gradlew bundleRelease  # This will generate the .aab file

      # Print the contents of the directory to verify the AAB path
      - name: List directory contents
        run: ls -R app/build/outputs/bundle/release/

      # Deploy the AAB to Google Play's Internal Test track
      - name: Deploy to Google Play (Internal Test)
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJson: ${{ secrets.GOOGLE_PLAY_JSON_KEY }}  # Use the secret directly
          packageName: com.cicdtest  # Replace with your app's package name
          releaseFiles: app/build/outputs/bundle/release/app-release.aab  # Update to use AAB file
          track: internal  # Upload to the internal track for testing
          inAppUpdatePriority: 0
          status: completed
          changesNotSentForReview: false
